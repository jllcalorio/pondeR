% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/performDescriptive.R
\name{performDescriptive}
\alias{performDescriptive}
\title{Performs Descriptive Statistics on a Dataframe}
\usage{
performDescriptive(
  df,
  summarize_what = everything(),
  split_by = NULL,
  split_by_header = NULL,
  strata_by = NULL,
  label = NULL,
  continuous_statistics = "meanSD",
  categorical_statistics = "n_pct",
  force_continuous = NULL,
  force_categorical = NULL,
  n_digits_continuous = c(2, 2),
  n_digits_categorical = c(0, 2),
  display_missing = "ifany",
  missing_text = "No data/missing",
  missing_stat = "n_pct",
  sort_categorical_variables_by = "alphanumeric",
  calc_percent_by = "column",
  header = "Variable",
  clean_table = TRUE,
  bold_labels = TRUE,
  italicize_levels = TRUE
)
}
\arguments{
\item{df}{Dataframe. The input dataframe. The first row is assumed to contain column names.}

\item{summarize_what}{Character vector. A character vector of column names that will be included in the analysis, including what will be placed in \code{split_by} and \code{strata_by}.}

\item{split_by}{String. A column name in \code{df} (must be a categorical variable with at least 2 unique levels/factors) by which to stratify the descriptive statistics. If \code{NULL} (default), no stratification is performed.}

\item{split_by_header}{String. The header name to display for the \code{split_by} variable in the output table. Only applicable if \code{split_by} is not \code{NULL}, and takes on the value of \code{split_by}. Defaults to \code{NULL} initially.}

\item{strata_by}{String. A column name in \code{df} (must be a categorical variable with at least 2 unique levels/factors) by which to stratify the descriptive statistics 'before' \code{split_by}. If \code{NULL} (default), no stratification is performed.}

\item{label}{List. A list of the format \code{list(original_variable_name1 ~ new_variable_name1, ...)}, used to rename variables in the output table.}

\item{continuous_statistics}{String. The type of statistics to report for continuous variables. Options are:
\itemize{
\item 'meanSD': mean Â± standard deviation
\item 'meanSD2': mean (standard deviation), which is another format of meanSD
\item 'medianIQR': median (interquartile range) or median (p25, p75)
\item 'mean': mean (average)
\item 'sd': standard deviation
\item 'p0': 0th percentile
\item 'p25': 25th percentile (1st quartile)
\item 'p50': 50th percentile (2nd quartile) (median)
\item 'p75': 75th percentile (3rd quartile)
\item 'p100': 100th percentile
\item 'IQR': p25, p75 (interquartile range)
}
Defaults to 'meanSD'.}

\item{categorical_statistics}{String. The type of statistics to report for categorical variables.
\itemize{
\item 'n_pct': Displays count and percentage of valid values (e.g., '10 (5.0\%)').
\item 'n': Displays only the count of valid values.
\item 'pct': Displays only the percentage of valid values.
}
Defaults to 'n_pct'.
Options are 'n_pct' (count (percentage)), 'n' (count only), or 'pct' (percentage only). Defaults to 'n_pct'.}

\item{force_continuous}{Vector. A character vector of column names that should be treated as continuous, even if their data type suggests otherwise (e.g., numeric variables with few unique values that might be misclassified as categorical).}

\item{force_categorical}{Vector. A character vector of column names that should be treated as categorical, even if their data type suggests otherwise (e.g., numeric variables that are truly categories, or binary variables that should be presented as full categories rather than dichotomous).}

\item{n_digits_continuous}{Numeric Vector. A vector of two integers specifying the number of digits to round for mean and standard deviation (or median and IQR) respectively, for continuous variables. For example, \code{c(2, 2)} means 2 decimal places for both (default).}

\item{n_digits_categorical}{Numeric Vector. A vector of two integers specifying the number of digits to round for counts and percentages respectively, for categorical variables. For example, \code{c(0, 2)} means 0 decimal places for counts and 2 for percentages (default).}

\item{display_missing}{String. Controls how missing values are reported.
\itemize{
\item 'ifany': Report missing values only if they are present in the data.
\item 'no': Do not report missing values.
\item 'always': Always include a row for missing values, even if none are present.
}
Defaults to 'ifany'.}

\item{missing_text}{String. The label to use for missing values in the output table. Defaults to 'No/Missing data'.}

\item{missing_stat}{String. The format for reporting missing value statistics.
\itemize{
\item 'n_pct': Displays count and percentage of missing values (e.g., '10 (5.0\%)').
\item 'n': Displays only the count of missing values.
\item 'pct': Displays only the percentage of missing values.
}
Defaults to 'n_pct'.}

\item{sort_categorical_variables_by}{String. Determines the sorting order for levels within categorical variables.
\itemize{
\item 'alphanumeric': Sorts levels alphabetically or numerically. For custom sorting, use \code{factor(data, levels = c(level1, level2, ...))}.
\item 'frequency': Sorts levels by their frequency (from highest to lowest).
}
Defaults to 'alphanumeric'.}

\item{calc_percent_by}{String. Specifies how percentages are calculated for categorical variables.
\itemize{
\item 'column': Percentages are calculated down columns (sum to 100\% per column).
\item 'row': Percentages are calculated across rows (sum to 100\% per row, useful for \code{split_by}).
\item 'cell': Percentages are calculated based on the total number of observations in the table.
}
Defaults to 'column' if \code{split_by} is not \code{NULL}, otherwise, automatically sets to 'row'.}

\item{header}{String. The header name for the 'Variable' column in the output table. Defaults to 'Variable'.}

\item{clean_table}{Boolean. If \code{TRUE} (default), cells with a count of 0 are removed (replaced with empty space) from the descriptive table, making it cleaner.}

\item{bold_labels}{Boolean. If \code{TRUE} (default), variable labels in the table will be bolded.}

\item{italicize_levels}{Boolean. If \code{TRUE} (default), categorical variable levels in the table will be italicized.}
}
\value{
A \code{gtsummary} table object (inherits from \code{gt_tbl}), representing the simple descriptive statistics.
}
\description{
This function generates a comprehensive descriptive statistics table from a given dataframe,
optionally stratified by a categorical variable. It provides customizable summaries for both
continuous and categorical variables, including control over rounding, missing data reporting,
labeling, formatting, and table aesthetics. The output is a publication-ready \code{gtsummary} table
that can be easily integrated into reports, manuscripts, or exported (via copy-paste for now) for further use.
}
\examples{
\dontrun{
# Load necessary library
library(gtsummary)
library(dplyr)
library(magrittr)

# Create a sample dataframe
set.seed(123)
sample_df <- data.frame(
  Age = rnorm(100, 35, 10),
  Gender = sample(c("Male", "Female", NA), 100, replace = TRUE, prob = c(0.48, 0.48, 0.04)),
  Education = sample(c("High School", "Bachelors", "Masters", NA), 100, replace = TRUE, prob = c(0.25, 0.35, 0.35, 0.05)),
  Income = rgamma(100, shape = 5, rate = 0.1) * 1000,
  Smoker = sample(c(1, 0), 100, replace = TRUE, prob = c(0.3, 0.7)),
  Region = sample(c("North", "South", "East", "West"), 100, replace = TRUE, prob = c(0.25, 0.25, 0.25, 0.25))
)

# Basic descriptive statistics
performDescriptive(df = sample_df)

# Descriptive statistics split by Gender, with custom header and labels
performDescriptive(
  df = sample_df,
  split_by = "Gender",
  split_by_header = "Participant Gender",
  label = list(Age ~ "Age (Years)", Income ~ "Annual Income", Smoker ~ "Smoking Status")
)

# Descriptive statistics with median and IQR for continuous, and count only for categorical
performDescriptive(
  df = sample_df,
  continuous_statistics = "medianIQR",
  categorical_statistics = "n",
  n_digits_continuous = c(0, 0),
  n_digits_categorical = c(0, 0)
)

# Force 'Smoker' to be continuous (though conceptually it's not, for demonstration)
# And display missing always (with custom text), with bold labels and italicized levels
performDescriptive(
  df = sample_df,
  force_continuous = "Smoker",
  display_missing = "always",
  missing_text = "Data Unavailable",
  missing_stat = "n",
  bold_labels = TRUE,
  italicize_levels = TRUE
)

# Sort categorical variables by frequency and calculate percentages by row (not ideal, but for demonstration only)
performDescriptive(
  df = sample_df,
  sort_categorical_variables_by = "frequency",
  calc_percent_by = "row"
)
}

}
